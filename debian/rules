#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

include /usr/share/quilt/quilt.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
  buildflags = --build=$(DEB_BUILD_GNU_TYPE)
else
  buildflags = --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif

ifneq (,$(findstring parallel,$(DEB_BUILD_OPTIONS)))
    parallel := $(shell echo $(DEB_BUILD_OPTIONS) | \
            sed -e 's/.*parallel=\([0-9]\+\).*/\1/')
    ifeq ($(DEB_BUILD_OPTIONS),$(parallel))
        PARALLEL_JOBS := $(shell if [ -f /proc/cpuinfo ]; \
                    then echo `cat /proc/cpuinfo | grep 'processor' | wc -l`; \
                                else echo 1; fi)
    endif
    jobsflag := -j$(parallel)
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
  CFLAGS += -O0
else
  CFLAGS += -O2
endif

ifneq (,$(findstring thumb,$(DEB_BUILD_OPTIONS)))
        CFLAGS += -mthumb
endif

config.status: configure
	if [ ! -x configure ]; then ./.bootstrap; fi
	dh_testdir
	# Add here commands to configure the package.
	./configure $(buildflags) \
		    --prefix=/usr \
		    --libdir=\$${prefix}/lib \
	            --enable-shared \
	            --disable-dependency-tracking \
	            --enable-arm-neon \
	            --disable-documentation
	            $(shell DEB_LDFLAGS_MAINT_APPEND=-Wl,--as-needed --export=configure)


build: patch build-stamp
build-stamp:  config.status
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE) $(jobsflag) MAKEINFO='makeinfo --enable-encoding'
ifeq (,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
	$(MAKE) check
endif

	touch build-stamp

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || $(MAKE) distclean
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp

# Build architecture-independent files here.
build-indep:
binary-indep:
# Nothing to do

# Build architecture-dependent files here.
build-arch: build
binary-arch: build-arch install
	dh_testdir
	dh_testroot
	dh_install -a --sourcedir=debian/tmp
	dh_link -a
	dh_installchangelogs -a ChangeLog
	dh_installdocs -a
	dh_installexamples -a
	dh_installinfo -a
	dh_installman -a
	# fix for buggy SB install.bin error "exists but is not a directory"
	mkdir -p debian/nettle-dbg/usr/lib/debug//usr/bin
	dh_strip -a --dbg-package=nettle-dbg
	dh_compress -a -X.pdf
	dh_fixperms -a
	dh_makeshlibs -a -V
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-arch
.PHONY: build build-indep build-arch clean clean-patched binary-indep binary-arch binary install
